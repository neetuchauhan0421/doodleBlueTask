{"version":3,"sources":["containers/actions/userActions.js","containers/actions/types.js","components/ViewContactList.jsx","components/ViewContact.jsx","assets/StubJson.js","components/Search.jsx","components/Dashboard.jsx","containers/reducers/userReducer.js","containers/reducers/index.js","App.js","serviceWorker.js","index.js"],"names":["addContactDetails","data","dispatch","console","log","type","payload","connect","state","user","viewContactDetails","withRouter","props","React","useState","style","marginLeft","add_details","length","List","map","lsItem","key","ListItem","alignItems","button","onClick","product","ListItemIcon","ListItemAvatar","Avatar","alt","avtar","ListItemText","primary","fullname","secondary","Typography","variant","color","display","flexDirection","email","company","Divider","component","Card","maxWidth","textAlign","CardActionArea","CardMedia","height","title","useStyles","makeStyles","theme","root","flexGrow","paper","palette","text","padding","backgroundColor","width","marginTop","classes","view_details","className","Grid","container","spacing","Paper","margin","justifyContent","phoneno","address","contactlist","Search","query","ProductStub","filteredData","handleInputChange","event","target","value","setState","prevState","filter","element","toLowerCase","includes","TextField","label","this","onChange","InputProps","endAdornment","InputAdornment","IconButton","Component","withStyles","menuButton","marginRight","breakpoints","up","search","position","borderRadius","shape","fade","common","white","searchIcon","pointerEvents","inputRoot","inputInput","paddingLeft","transition","transitions","create","minWidth","bullet","transform","fontSize","pos","marginBottom","open","setOpen","scroll","setScroll","handleClose","scrollType","item","xs","sm","gutterBottom","Button","Dialog","onClose","aria-labelledby","DialogTitle","FormControl","onSubmit","e","preventDefault","dict","tmp","arr","split","concat","toUpperCase","userdetail","push","detail","user_detail","id","name","startAdornment","DialogActions","initialState","combineReducers","action","middleware","thunk","store","createStore","appReducer","compose","applyMiddleware","App","basename","exact","path","Dashboard","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","ReactDOM","render","StrictMode","document","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.a79d7b44.chunk.js","sourcesContent":["import {\n  \n    ADD_DETAILS,\n    INSTANT_VIEW\n  \n  } from \"./types\";\n  \n  \n  export const addContactDetails = (data) => (dispatch) => {\n    console.log(data)\n    dispatch({\n      type: ADD_DETAILS,\n      payload: data,\n    });\n  };\n  \n  export const viewContactDetails = (data) => (dispatch) => {\n    console.log(data)\n    dispatch({\n      type: INSTANT_VIEW,\n      payload: data,\n    });\n  };\n  \n  \n  ","export const ADD_DETAILS= \"add_details\";\nexport const INSTANT_VIEW=\"instant_view\"\n\n\n","import React from \"react\";\n\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport {\n  Typography,\n  ListItem,\n  List,\n  Avatar,\n  ListItemText,\n} from \"@material-ui/core\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\nimport Divider from \"@material-ui/core/Divider\";\nimport { addContactDetails,viewContactDetails } from \"../containers/actions/userActions\";\nfunction UserBox(props) {\n  const [open, setOpen] = React.useState(false);\n  const [scroll, setScroll] = React.useState(\"paper\");\n\n  \n\n  function handleClose() {\n    setOpen(false);\n  }\n  function deleteFromCart(product) {\n    console.log(\"d\");\n    props.viewContactDetails(product);\n\n  }\n\n  return (\n    <div style={{ marginLeft: \"auto\" }}>\n     \n          {props.user.add_details && props.user.add_details.length ? (\n            <List>\n              {\" \"}\n              {props.user.add_details.map((lsItem, key) => (\n                <div key={key}>\n                  <ListItem key={key} alignItems=\"flex-start\" button onClick={() => deleteFromCart(lsItem)}>\n                  <ListItemIcon>\n                    <ListItemAvatar>\n                      <Avatar\n                        alt=\"Remy Sharp\"\n                      >{lsItem.avtar}</Avatar>\n                    </ListItemAvatar>\n                    </ListItemIcon>\n                    <ListItemText\n                      primary={lsItem.fullname}\n                      secondary={\n                        <Typography\n                          variant=\"subtitle1\"\n                          color=\"textSecondary\"\n                          style={{ display: \"flex\", flexDirection: \"row\" }}>\n                          {lsItem.email}\n                        \n                        </Typography>\n                      }\n                    />\n                      <Typography\n                          variant=\"subtitle1\"\n                          color=\"textSecondary\"\n                        //   style={{ display: \"flex\", flexDirection: \"row\" }}>\n                        >\n                          {lsItem.company}\n                        </Typography>\n                  </ListItem>\n                  <Divider variant=\"inset\" component=\"li\" />\n                </div>\n              ))}\n            </List>\n          ) : (\n            <Card style={{ maxWidth: 345, textAlign: \"center\" }}>\n              <CardActionArea>\n                <CardMedia\n                  style={{ height: 250 }}\n                //   image={require(\"../assets/Images/cart.png\")}\n                  title=\"Contemplative Reptile\"\n                />\n\n              \n              </CardActionArea>\n            </Card>\n          )}\n    </div>\n  );\n}\n\nconst mapStateToProps = (state) => ({\n  user: state.user,\n});\n\nexport default connect(mapStateToProps, {\n  addContactDetails,\n  viewContactDetails,\n})(withRouter(UserBox));","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\nimport {\n   \n    Avatar,\n  } from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n    },\n    paper: {\n        color: theme.palette.text.secondary,\n        padding: \"31px 26px 11px 29px\",\n        backgroundColor: \"#e1e6e5\",\n        width:\"71%\",\n        marginTop:\"6rem\",\n        marginLeft:\"6rem\"\n    },\n}));\nfunction FullWidthGrid(props\n) {\n    const classes = useStyles();\nlet user = props.user.view_details;\n    return (\n        <div className={classes.root}>\n            <Grid\n                container\n                spacing={2}\n                style={{\n                    display: \"flex\",\n                }}>\n                    <Grid container>\n                        {/* <List> */}\n                        {/* {props.user.view_details((user) => */}\n                        {/* //   <Grid item xs={6} sm={3}> */}\n                        {user && user.fullname? (\n                            <Paper alignItems=\"flex-start\" className={classes.paper}>\n                                <Avatar style={{margin:\"auto\",backgroundColor:\"green\",width:\"6rem\"}}>{user.avtar}</Avatar>\n                                <Typography style={{margin:\"auto\",width:\"2rem\"}}>{user.fullname}</Typography>\n\n                                \n                                <Grid>\n                                <Typography>Full Name  </Typography>\n                                <Typography style={{display:\"flex\",justifyContent:\"end\"}}>{user.fullname}</Typography>\n                                </Grid>\n                                <Grid>\n                                    <Typography>Email: </Typography>\n                                    <Typography  style={{display:\"flex\",justifyContent:\"end\"}}>\n                                    {user.email}\n                                    </Typography>\n                                </Grid>\n                                <Grid>\n                                <Typography>Phone No </Typography>\n\n                                <Typography  style={{display:\"flex\",justifyContent:\"end\"}} >\n                                    {user.phoneno}\n                               </Typography>\n                                </Grid>\n                                <Grid>\n                                <Typography>Company </Typography>\n\n                                    <Typography  style={{display:\"flex\",justifyContent:\"end\"}}>{user.company}\n                                    </Typography>\n                                </Grid>\n                                <Grid>\n                                <Typography>Address </Typography>\n\n                                <Typography  style={{display:\"flex\",justifyContent:\"end\"}}>\n                                    {user.address}\n                                </Typography>\n                                </Grid>\n                            </Paper>):null}\n                        {/* // </Grid> */}\n                        {/* )}  */}\n                        {/* </List> */}\n                    </Grid>\n                </Grid>\n             </div>\n    );\n}\nconst mapStateToProps = (state) => ({\n    user: state.user\n    ,\n});\n\nexport default connect(mapStateToProps, {\n\n    // serInformation,\n})(withRouter(FullWidthGrid));\n","const contactlist=[{\n    fullname:\"Mike Huston\",\nemail:\"mikehuston123@gmail.com\",\n    phoneno:\"8269170498\",\n    company:\"Amazon\",\n    address:\"Gachibowli,Hyderabad\",\n    avtar:\"MH\"\n},\n{ 'fullname':\"John Noel\",\n\"email\":\"john@gmail.com\",\n'phoneno':\"8269170498\",\n'company':\"Schrocken Inc\",\n'address':\"Gachibowli,Hyderabad\",\n'avtar':\"JN\"\n},\n{\n    'fullname':\"Marrk Dwwain\",\n    \"email\":\"mark@gmail.com\",\n    'phoneno':\"283993902\",\n    'company':\"Myntra \",\n    'address':\"Gachibowli,Hyderabad\",\n    'avtar':\"MD\"\n}\n]\n\nexport default contactlist;\n\n\n\n\n\n\n\n\n\n","import React from \"react\";\n\nimport ProductStub from '../assets/StubJson';\nimport { withRouter } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { addContactDetails } from \"../containers/actions/userActions\";\n\nimport IconButton from '@material-ui/core/IconButton';\nimport { withStyles, fade } from \"@material-ui/core/styles\";\nimport SearchIcon from '@material-ui/icons/Search';\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport TextField from \"@material-ui/core/TextField\";\n\n\nconst useStyles = theme => ({\n    root: {\n        flexGrow: 1,\n    },\n    menuButton: {\n        marginRight: theme.spacing(2),\n    },\n    title: {\n        flexGrow: 1,\n        display: 'none',\n        [theme.breakpoints.up('sm')]: {\n            display: 'block',\n        },\n    },\n    search: {\n        position: 'relative',\n        borderRadius: theme.shape.borderRadius,\n        backgroundColor: fade(theme.palette.common.white, 0.15),\n        '&:hover': {\n            backgroundColor: fade(theme.palette.common.white, 0.25),\n        },\n        marginLeft: 0,\n        width: '100%',\n        [theme.breakpoints.up('sm')]: {\n            marginLeft: theme.spacing(1),\n            width: 'auto',\n        },\n    },\n    searchIcon: {\n        padding: theme.spacing(0, 2),\n        height: '100%',\n        position: 'absolute',\n        pointerEvents: 'none',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    inputRoot: {\n        color: 'inherit',\n    },\n    inputInput: {\n        padding: theme.spacing(1, 1, 1, 0),\n        // vertical padding + font size from searchIcon\n        paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n        transition: theme.transitions.create('width'),\n        width: '100%',\n        [theme.breakpoints.up('sm')]: {\n            width: '12ch',\n            '&:focus': {\n                width: '20ch',\n            },\n        },\n    },\n});\nclass Search extends React.Component {\n    state = {\n        query: \"\",\n        data: ProductStub,\n        filteredData: []\n    };\n\n    handleInputChange = event => {\n        const query = event.target.value;\n\n        this.setState(prevState => {\n            const filteredData = prevState.data.filter(element => {\n                return element.fullname.toLowerCase().includes(query.toLowerCase());\n            });\n\n            return {\n                query,\n                filteredData\n            };\n        });\n        this.props.addContactDetails(this.state.filteredData)\n    };\n\n\n    render() {\n\n        return (\n\n\n            <div>\n                <TextField\n                    style={{ marginLeft: \"31rem\", marginTop: \"-4rem\" }}\n                    label=\"Search Contacts\"\n                    value={this.state.query}\n                    onChange={this.handleInputChange}\n                    InputProps={{\n\n                        endAdornment: (\n                            <InputAdornment\n                            >\n                                <IconButton>\n                                    <SearchIcon />\n                                </IconButton>\n                            </InputAdornment>\n                        )\n                    }}\n                />\n            </div>\n\n\n        );\n    }\n}\nconst mapStateToProps = (state) => ({\n    user: state.user,\n});\n\n\n\nexport default (withStyles(useStyles)(connect(mapStateToProps, {\n    addContactDetails,\n\n})(withRouter(Search))));","\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from \"@material-ui/core/Grid\";\nimport ContactsIcon from '@material-ui/icons/Contacts';\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport FormControl from '@material-ui/core/FormControl';\nimport TextField from '@material-ui/core/TextField';\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport InputAdornment from '@material-ui/core/InputAdornment';\n\nimport UserBox from './ViewContactList'\nimport FullWidthGrid from './ViewContact'\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\nimport Search from \"../components/Search\";\nimport {\n    addContactDetails,\n} from \"../containers/actions/userActions\";\n\nconst useStyles = makeStyles({\n    root: {\n        minWidth: 275,\n    },\n    bullet: {\n        display: 'inline-block',\n        margin: '0 2px',\n        transform: 'scale(0.8)',\n    },\n    title: {\n        fontSize: 14,\n    },\n    pos: {\n        marginBottom: 12,\n    },\n});\nfunction SimpleCard(props) {\n    const [open, setOpen] = React.useState(false);\n    const [scroll, setScroll] = React.useState(\"paper\");\n    const handleClickOpen = (scrollType) => () => {\n        setOpen(true);\n        setScroll(scrollType);\n    };\n\n   \n    function handleClose() {\n        setOpen(false);\n    };\n    function handleClick(e) {\n        e.preventDefault();\n        let dict = {};\n        let tmp = '';\n\n        let arr = e.target.fullname.value.split(\" \");\n        if (arr.length > 1 && arr[1][0]) {\n            tmp = arr[0][0].concat(arr[1][0]).toUpperCase();\n        }\n        else{\n            tmp = arr[0][0].toUpperCase();\n        }\n        dict['fullname'] = e.target.fullname.value;\n        dict['email'] = e.target.email.value;\n        dict['phoneno'] = e.target.phoneno.value;\n        dict['company'] = e.target.company.value;\n        dict['address'] = e.target.address.value;\n        dict['avtar'] = tmp;\n        let userdetail = props.user.add_details;\n        userdetail.push(dict)\n        props.addContactDetails(userdetail)\n        console.log(tmp,arr)\n        //props.history.push(\"/Seller\")\n        console.log(props.detail)\n        console.log(e.target.address.value);\n        console.log(e.target.fullname.value);\n        console.log(e.target.email.value);\n        console.log(e.target.phoneno.value);\n        console.log(props.user.user_detail)\n        // whatever you typed into the input\n        setOpen(false);\n    }\n    const classes = useStyles();\n   \n\n    return (\n        <Grid container style={{ display: \"flex\", flexDirection: \"row\", marginTop: \"4rem\" }}>\n            <Grid item xs={12} sm={6}>\n                <Grid >\n                    <ContactsIcon  style={{ marginLeft: \"4rem\", marginTop: \"-2rem\" }} />\n                    <Typography style={{ marginLeft: \"6rem\", marginTop: \"-2rem\" }}\n                        variant=\"h5\" color=\"textSecondary\" gutterBottom>\n                        Contact\n                    </Typography>\n                </Grid>\n                <Grid style={{marginLeft:\"6rem\",marginTop:\"3rem\"}}  >\n                  \n                            <Button\n                                onClick={handleClickOpen(\"paper\")}\n                                variant=\"contained\" color=\"secondary\"\n                            >\n                                +Add Contacts\n                            </Button>\n                      \n<Search/>\n              <UserBox /> \n                </Grid>\n\n            </Grid>\n                <Grid item xs={12} sm={6}>\n                <FullWidthGrid/>\n                \n                </Grid>\n                      \n\n            \n            <Dialog\n                open={open}\n                onClose={handleClose}\n                scroll={scroll}\n                aria-labelledby=\"scroll-dialog-title\">\n                <DialogTitle>ADD </DialogTitle>\n                <FormControl className={classes.margin}>\n                    <form onSubmit={handleClick}>\n\n                        <Grid>\n\n                            <Grid style={{ marginTop: \"2rem\", marginLeft: \"2rem\" }}>\n                                <TextField\n                                    style={{ width: \"13rem\" }}\n                                    id=\"full name\"\n                                    label=\"Full Name\"\n                                    name=\"fullname\"\n                                ></TextField>\n                            </Grid>\n                            <Grid>\n                                <TextField\n                                    className={classes.margin}\n                                    style={{\n                                        marginTop: \"2rem\",\n                                        marginLeft: \"2rem\",\n                                        width: \"13rem\"\n                                    }}\n                                    id=\"email\"\n                                    name=\"email\"\n                                    label=\"Email\"\n\n                                    InputProps={{\n                                        startAdornment: (\n                                            <InputAdornment position=\"start\">\n                                            </InputAdornment>\n                                        ),\n                                    }}\n                                />\n                            </Grid>\n                            <Grid>\n                                <TextField\n                                    className={classes.margin}\n                                    style={{\n                                        marginTop: \"2rem\",\n                                        marginLeft: \"2rem\",\n                                        width: \"13rem\"\n                                    }}\n                                    id=\"phone no\"\n                                    name=\"phoneno\"\n                                    label=\"Enter Phone no\"\n                                    InputProps={{\n                                        startAdornment: (\n                                            <InputAdornment position=\"start\">\n                                            </InputAdornment>\n                                        ),\n                                    }}\n                                />\n                            </Grid>\n                            <Grid>\n                                <TextField\n                                    className={classes.margin}\n                                    style={{\n                                        marginTop: \"2rem\",\n                                        marginLeft: \"2rem\",\n                                        width: \"13rem\"\n                                    }}\n                                    id=\"company\"\n                                    name=\"company\"\n                                    label=\"Company\"\n                                    InputProps={{\n                                        startAdornment: (\n                                            <InputAdornment position=\"start\">\n                                            </InputAdornment>\n                                        ),\n                                    }}\n                                />\n                            </Grid>\n                            <Grid>\n                                <TextField\n                                    className={classes.margin}\n                                    style={{\n                                        marginTop: \"2rem\",\n                                        marginLeft: \"2rem\",\n                                        width: \"13rem\"\n                                    }}\n                                    id=\"address\"\n                                    name=\"address\"\n                                    label=\"Enter address\"\n                                    InputProps={{\n                                        startAdornment: (\n                                            <InputAdornment position=\"start\">\n                                            </InputAdornment>\n                                        ),\n                                    }}\n                                />\n                            </Grid>\n                        </Grid>\n\n                    <DialogActions >\n                        <Button onClick={handleClose} color=\"primary\">\n                            Cancel\n                        </Button>\n                        <Button type=\"submit\" variant=\"contained\" color=\"primary\">Save</Button>\n\n                    </DialogActions>\n                    </form>\n\n                </FormControl>\n            </Dialog>\n            </Grid>\n\n    );\n}\nconst mapStateToProps = (state) => ({\n    user: state.user,\n});\n\nexport default connect(mapStateToProps, {\n\n    addContactDetails\n})(withRouter(SimpleCard));\n","import {\n \n  ADD_DETAILS,\n  INSTANT_VIEW\n} from \"../actions/types\";\n import contactlist from \"../../assets/StubJson\";\n\n\n\nconst initialState = {\n  \n  add_details:contactlist,\n  view_details:{}\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n \n    case ADD_DETAILS:\n      return {\n        ...state,\n        add_details: action.payload,\n      };\n      case INSTANT_VIEW:\n      return {\n        ...state,\n        view_details: action.payload,\n      };\n\n    default:\n      return state;\n  }\n}\n \n    \n   ","import { combineReducers } from \"redux\";\n\nimport userReducer from \"./userReducer\";\n\n\nexport default combineReducers({\n  user: userReducer,\n});","import React from \"react\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport { Route } from \"react-router-dom\";\n\nimport Dashboard from \"./components/Dashboard\";\n// Main Routes file\nimport { createStore, applyMiddleware, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\n\nimport appReducer from \"../src/containers/reducers\";\n\n\n\nconst initialState = {};\n\nconst middleware = [thunk];\n\nconst rootReducer = (state, action) => {\n  return appReducer(state, action);\n};\n\nconst store =\n  process.env.NODE_ENV === \"development\"\n    ? createStore(\n      rootReducer,\n      initialState,\n      compose(\n        applyMiddleware(...middleware),\n      //  window.__REDUX_DEVTOOLS_EXTENSION__ &&\n      // window.__REDUX_DEVTOOLS_EXTENSION__()\n      )\n    )\n    : createStore(\n      rootReducer,\n      initialState,\n      compose(applyMiddleware(...middleware))\n    );\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <BrowserRouter basename=\"doodleblueTask\">\n        <Route exact path=\"/\" name=\"Dashboard\" component={Dashboard} />\n      </BrowserRouter>\n    </Provider>\n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}